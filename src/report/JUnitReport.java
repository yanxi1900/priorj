package report;

import java.util.ArrayList;
import java.util.List;

import util.ReadXML;
import util.TestResult;



/**
 * This class read the XML generated by JUnit with informations 
 * about JUnit execution tests.
 * 
 * @author Samuel T. C. Santos
 * @version 1.0 
 * 
 */
public class JUnitReport {

	/**
	 * constructor
	 */
	public JUnitReport(){
		//default
	}
    /**
     * This method read a XML file with report of JUnit execution.
     *  
     * @return
     * 			An Object type <code>TestResult</code>.
     */
    public static List<TestResult> getResult() {
        return ReadXML.getTestResults("TESTS-TestSuites");
    }
   
    /**
     * This method return a list with all tests executed by JUnit.
     * 
     * @return
     * 		A list of test cases.
     */
    public static List<String> getTestNames(){
		List<TestResult> junitReport = JUnitReport.getResult();
		
		List<String> testnames = new ArrayList<String>();
		
		for (TestResult result: junitReport){
			String suite = result.getNameSuite();
			String test  = result.getTestName();
			String name = suite+"."+test;
			testnames.add(name);
		}
		return testnames;
	}
    
    /**
     * Report with string format.
     */
    public String toString(){
    	
    	List<TestResult> resultList = JUnitReport.getResult();
    	
    	StringBuilder builder = new StringBuilder();
		
		builder.append(" ........:  JUnit Execution Report :........ \n");
		int counter = 1;
		for (TestResult result : resultList){
			builder.append(String.valueOf(counter));
                        
                        builder.append("\t");
                        
			if (result.isPassed())
				builder.append("OK \t");
			else
				builder.append("FAILED \t");
			
			builder.append(" Time ");
		
			builder.append(String.valueOf(result.getTimeExecution()));
			builder.append("\t");
			builder.append(result.getNameSuite());
			builder.append(".");
			builder.append(result.getTestName());
			builder.append("\n");
                        counter++;
		}
		
		builder.append("..........................................\n");
		
		return builder.toString();
    }
	
    
}
